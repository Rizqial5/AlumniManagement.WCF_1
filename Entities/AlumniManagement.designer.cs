#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AlumniManagement.WCF.Entities
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="KDP22")]
	public partial class AlumniManagementDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAlumni(Alumni instance);
    partial void UpdateAlumni(Alumni instance);
    partial void DeleteAlumni(Alumni instance);
    partial void InsertMajor(Major instance);
    partial void UpdateMajor(Major instance);
    partial void DeleteMajor(Major instance);
    partial void InsertFaculty(Faculty instance);
    partial void UpdateFaculty(Faculty instance);
    partial void DeleteFaculty(Faculty instance);
    partial void InsertJobHistory(JobHistory instance);
    partial void UpdateJobHistory(JobHistory instance);
    partial void DeleteJobHistory(JobHistory instance);
    partial void InsertDistrict(District instance);
    partial void UpdateDistrict(District instance);
    partial void DeleteDistrict(District instance);
    partial void InsertState(State instance);
    partial void UpdateState(State instance);
    partial void DeleteState(State instance);
    partial void InsertAlumniImage(AlumniImage instance);
    partial void UpdateAlumniImage(AlumniImage instance);
    partial void DeleteAlumniImage(AlumniImage instance);
    #endregion
		
		public AlumniManagementDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AlumniManagementDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AlumniManagementDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AlumniManagementDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Alumni> Alumnis
		{
			get
			{
				return this.GetTable<Alumni>();
			}
		}
		
		public System.Data.Linq.Table<Major> Majors
		{
			get
			{
				return this.GetTable<Major>();
			}
		}
		
		public System.Data.Linq.Table<Faculty> Faculties
		{
			get
			{
				return this.GetTable<Faculty>();
			}
		}
		
		public System.Data.Linq.Table<JobHistory> JobHistories
		{
			get
			{
				return this.GetTable<JobHistory>();
			}
		}
		
		public System.Data.Linq.Table<District> Districts
		{
			get
			{
				return this.GetTable<District>();
			}
		}
		
		public System.Data.Linq.Table<State> States
		{
			get
			{
				return this.GetTable<State>();
			}
		}
		
		public System.Data.Linq.Table<AlumniImage> AlumniImages
		{
			get
			{
				return this.GetTable<AlumniImage>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Alumni")]
	public partial class Alumni : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AlumniID;
		
		private string _FirstName;
		
		private string _MiddleName;
		
		private string _LastName;
		
		private string _Email;
		
		private string _MobileNumber;
		
		private string _Address;
		
		private System.Nullable<int> _DistrictID;
		
		private System.Nullable<System.DateTime> _DateOfBirth;
		
		private System.Nullable<int> _GraduationYear;
		
		private string _Degree;
		
		private System.Nullable<int> _MajorID;
		
		private string _LinkedInProfile;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<JobHistory> _JobHistories;
		
		private EntitySet<AlumniImage> _AlumniImages;
		
		private EntityRef<Major> _Major;
		
		private EntityRef<District> _District;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAlumniIDChanging(int value);
    partial void OnAlumniIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnMobileNumberChanging(string value);
    partial void OnMobileNumberChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnDistrictIDChanging(System.Nullable<int> value);
    partial void OnDistrictIDChanged();
    partial void OnDateOfBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfBirthChanged();
    partial void OnGraduationYearChanging(System.Nullable<int> value);
    partial void OnGraduationYearChanged();
    partial void OnDegreeChanging(string value);
    partial void OnDegreeChanged();
    partial void OnMajorIDChanging(System.Nullable<int> value);
    partial void OnMajorIDChanged();
    partial void OnLinkedInProfileChanging(string value);
    partial void OnLinkedInProfileChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public Alumni()
		{
			this._JobHistories = new EntitySet<JobHistory>(new Action<JobHistory>(this.attach_JobHistories), new Action<JobHistory>(this.detach_JobHistories));
			this._AlumniImages = new EntitySet<AlumniImage>(new Action<AlumniImage>(this.attach_AlumniImages), new Action<AlumniImage>(this.detach_AlumniImages));
			this._Major = default(EntityRef<Major>);
			this._District = default(EntityRef<District>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlumniID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AlumniID
		{
			get
			{
				return this._AlumniID;
			}
			set
			{
				if ((this._AlumniID != value))
				{
					this.OnAlumniIDChanging(value);
					this.SendPropertyChanging();
					this._AlumniID = value;
					this.SendPropertyChanged("AlumniID");
					this.OnAlumniIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(50)")]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNumber", DbType="NVarChar(15)")]
		public string MobileNumber
		{
			get
			{
				return this._MobileNumber;
			}
			set
			{
				if ((this._MobileNumber != value))
				{
					this.OnMobileNumberChanging(value);
					this.SendPropertyChanging();
					this._MobileNumber = value;
					this.SendPropertyChanged("MobileNumber");
					this.OnMobileNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					if (this._District.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="Date")]
		public System.Nullable<System.DateTime> DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GraduationYear", DbType="Int")]
		public System.Nullable<int> GraduationYear
		{
			get
			{
				return this._GraduationYear;
			}
			set
			{
				if ((this._GraduationYear != value))
				{
					this.OnGraduationYearChanging(value);
					this.SendPropertyChanging();
					this._GraduationYear = value;
					this.SendPropertyChanged("GraduationYear");
					this.OnGraduationYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Degree", DbType="NVarChar(100)")]
		public string Degree
		{
			get
			{
				return this._Degree;
			}
			set
			{
				if ((this._Degree != value))
				{
					this.OnDegreeChanging(value);
					this.SendPropertyChanging();
					this._Degree = value;
					this.SendPropertyChanged("Degree");
					this.OnDegreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorID", DbType="Int")]
		public System.Nullable<int> MajorID
		{
			get
			{
				return this._MajorID;
			}
			set
			{
				if ((this._MajorID != value))
				{
					if (this._Major.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMajorIDChanging(value);
					this.SendPropertyChanging();
					this._MajorID = value;
					this.SendPropertyChanged("MajorID");
					this.OnMajorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkedInProfile", DbType="NVarChar(255)")]
		public string LinkedInProfile
		{
			get
			{
				return this._LinkedInProfile;
			}
			set
			{
				if ((this._LinkedInProfile != value))
				{
					this.OnLinkedInProfileChanging(value);
					this.SendPropertyChanging();
					this._LinkedInProfile = value;
					this.SendPropertyChanged("LinkedInProfile");
					this.OnLinkedInProfileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alumni_JobHistory", Storage="_JobHistories", ThisKey="AlumniID", OtherKey="AlumniID")]
		public EntitySet<JobHistory> JobHistories
		{
			get
			{
				return this._JobHistories;
			}
			set
			{
				this._JobHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alumni_AlumniImage", Storage="_AlumniImages", ThisKey="AlumniID", OtherKey="AlumniID")]
		public EntitySet<AlumniImage> AlumniImages
		{
			get
			{
				return this._AlumniImages;
			}
			set
			{
				this._AlumniImages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Major_Alumni", Storage="_Major", ThisKey="MajorID", OtherKey="MajorID", IsForeignKey=true)]
		public Major Major
		{
			get
			{
				return this._Major.Entity;
			}
			set
			{
				Major previousValue = this._Major.Entity;
				if (((previousValue != value) 
							|| (this._Major.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Major.Entity = null;
						previousValue.Alumnis.Remove(this);
					}
					this._Major.Entity = value;
					if ((value != null))
					{
						value.Alumnis.Add(this);
						this._MajorID = value.MajorID;
					}
					else
					{
						this._MajorID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Major");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="District_Alumni", Storage="_District", ThisKey="DistrictID", OtherKey="DistrictID", IsForeignKey=true)]
		public District District
		{
			get
			{
				return this._District.Entity;
			}
			set
			{
				District previousValue = this._District.Entity;
				if (((previousValue != value) 
							|| (this._District.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._District.Entity = null;
						previousValue.Alumnis.Remove(this);
					}
					this._District.Entity = value;
					if ((value != null))
					{
						value.Alumnis.Add(this);
						this._DistrictID = value.DistrictID;
					}
					else
					{
						this._DistrictID = default(Nullable<int>);
					}
					this.SendPropertyChanged("District");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_JobHistories(JobHistory entity)
		{
			this.SendPropertyChanging();
			entity.Alumni = this;
		}
		
		private void detach_JobHistories(JobHistory entity)
		{
			this.SendPropertyChanging();
			entity.Alumni = null;
		}
		
		private void attach_AlumniImages(AlumniImage entity)
		{
			this.SendPropertyChanging();
			entity.Alumni = this;
		}
		
		private void detach_AlumniImages(AlumniImage entity)
		{
			this.SendPropertyChanging();
			entity.Alumni = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Major")]
	public partial class Major : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MajorID;
		
		private string _MajorName;
		
		private System.Nullable<int> _FacultyID;
		
		private string _Description;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<Alumni> _Alumnis;
		
		private EntityRef<Faculty> _Faculty;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMajorIDChanging(int value);
    partial void OnMajorIDChanged();
    partial void OnMajorNameChanging(string value);
    partial void OnMajorNameChanged();
    partial void OnFacultyIDChanging(System.Nullable<int> value);
    partial void OnFacultyIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public Major()
		{
			this._Alumnis = new EntitySet<Alumni>(new Action<Alumni>(this.attach_Alumnis), new Action<Alumni>(this.detach_Alumnis));
			this._Faculty = default(EntityRef<Faculty>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MajorID
		{
			get
			{
				return this._MajorID;
			}
			set
			{
				if ((this._MajorID != value))
				{
					this.OnMajorIDChanging(value);
					this.SendPropertyChanging();
					this._MajorID = value;
					this.SendPropertyChanged("MajorID");
					this.OnMajorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string MajorName
		{
			get
			{
				return this._MajorName;
			}
			set
			{
				if ((this._MajorName != value))
				{
					this.OnMajorNameChanging(value);
					this.SendPropertyChanging();
					this._MajorName = value;
					this.SendPropertyChanged("MajorName");
					this.OnMajorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacultyID", DbType="Int")]
		public System.Nullable<int> FacultyID
		{
			get
			{
				return this._FacultyID;
			}
			set
			{
				if ((this._FacultyID != value))
				{
					if (this._Faculty.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFacultyIDChanging(value);
					this.SendPropertyChanging();
					this._FacultyID = value;
					this.SendPropertyChanged("FacultyID");
					this.OnFacultyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Major_Alumni", Storage="_Alumnis", ThisKey="MajorID", OtherKey="MajorID")]
		public EntitySet<Alumni> Alumnis
		{
			get
			{
				return this._Alumnis;
			}
			set
			{
				this._Alumnis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faculty_Major", Storage="_Faculty", ThisKey="FacultyID", OtherKey="FacultyID", IsForeignKey=true)]
		public Faculty Faculty
		{
			get
			{
				return this._Faculty.Entity;
			}
			set
			{
				Faculty previousValue = this._Faculty.Entity;
				if (((previousValue != value) 
							|| (this._Faculty.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Faculty.Entity = null;
						previousValue.Majors.Remove(this);
					}
					this._Faculty.Entity = value;
					if ((value != null))
					{
						value.Majors.Add(this);
						this._FacultyID = value.FacultyID;
					}
					else
					{
						this._FacultyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Faculty");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Alumnis(Alumni entity)
		{
			this.SendPropertyChanging();
			entity.Major = this;
		}
		
		private void detach_Alumnis(Alumni entity)
		{
			this.SendPropertyChanging();
			entity.Major = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Faculty")]
	public partial class Faculty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FacultyID;
		
		private string _FacultyName;
		
		private string _Description;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<Major> _Majors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFacultyIDChanging(int value);
    partial void OnFacultyIDChanged();
    partial void OnFacultyNameChanging(string value);
    partial void OnFacultyNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public Faculty()
		{
			this._Majors = new EntitySet<Major>(new Action<Major>(this.attach_Majors), new Action<Major>(this.detach_Majors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacultyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FacultyID
		{
			get
			{
				return this._FacultyID;
			}
			set
			{
				if ((this._FacultyID != value))
				{
					this.OnFacultyIDChanging(value);
					this.SendPropertyChanging();
					this._FacultyID = value;
					this.SendPropertyChanged("FacultyID");
					this.OnFacultyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacultyName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FacultyName
		{
			get
			{
				return this._FacultyName;
			}
			set
			{
				if ((this._FacultyName != value))
				{
					this.OnFacultyNameChanging(value);
					this.SendPropertyChanging();
					this._FacultyName = value;
					this.SendPropertyChanged("FacultyName");
					this.OnFacultyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faculty_Major", Storage="_Majors", ThisKey="FacultyID", OtherKey="FacultyID")]
		public EntitySet<Major> Majors
		{
			get
			{
				return this._Majors;
			}
			set
			{
				this._Majors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Majors(Major entity)
		{
			this.SendPropertyChanging();
			entity.Faculty = this;
		}
		
		private void detach_Majors(Major entity)
		{
			this.SendPropertyChanging();
			entity.Faculty = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JobHistory")]
	public partial class JobHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _JobHistoryID;
		
		private System.Nullable<int> _AlumniID;
		
		private string _JobTitle;
		
		private string _Company;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _Description;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<Alumni> _Alumni;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJobHistoryIDChanging(int value);
    partial void OnJobHistoryIDChanged();
    partial void OnAlumniIDChanging(System.Nullable<int> value);
    partial void OnAlumniIDChanged();
    partial void OnJobTitleChanging(string value);
    partial void OnJobTitleChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public JobHistory()
		{
			this._Alumni = default(EntityRef<Alumni>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobHistoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int JobHistoryID
		{
			get
			{
				return this._JobHistoryID;
			}
			set
			{
				if ((this._JobHistoryID != value))
				{
					this.OnJobHistoryIDChanging(value);
					this.SendPropertyChanging();
					this._JobHistoryID = value;
					this.SendPropertyChanged("JobHistoryID");
					this.OnJobHistoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlumniID", DbType="Int")]
		public System.Nullable<int> AlumniID
		{
			get
			{
				return this._AlumniID;
			}
			set
			{
				if ((this._AlumniID != value))
				{
					if (this._Alumni.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAlumniIDChanging(value);
					this.SendPropertyChanging();
					this._AlumniID = value;
					this.SendPropertyChanged("AlumniID");
					this.OnAlumniIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobTitle", DbType="NVarChar(100)")]
		public string JobTitle
		{
			get
			{
				return this._JobTitle;
			}
			set
			{
				if ((this._JobTitle != value))
				{
					this.OnJobTitleChanging(value);
					this.SendPropertyChanging();
					this._JobTitle = value;
					this.SendPropertyChanged("JobTitle");
					this.OnJobTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(100)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alumni_JobHistory", Storage="_Alumni", ThisKey="AlumniID", OtherKey="AlumniID", IsForeignKey=true)]
		public Alumni Alumni
		{
			get
			{
				return this._Alumni.Entity;
			}
			set
			{
				Alumni previousValue = this._Alumni.Entity;
				if (((previousValue != value) 
							|| (this._Alumni.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Alumni.Entity = null;
						previousValue.JobHistories.Remove(this);
					}
					this._Alumni.Entity = value;
					if ((value != null))
					{
						value.JobHistories.Add(this);
						this._AlumniID = value.AlumniID;
					}
					else
					{
						this._AlumniID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Alumni");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Districts")]
	public partial class District : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DistrictID;
		
		private string _DistrictName;
		
		private int _StateID;
		
		private EntitySet<Alumni> _Alumnis;
		
		private EntityRef<State> _State;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDistrictIDChanging(int value);
    partial void OnDistrictIDChanged();
    partial void OnDistrictNameChanging(string value);
    partial void OnDistrictNameChanged();
    partial void OnStateIDChanging(int value);
    partial void OnStateIDChanged();
    #endregion
		
		public District()
		{
			this._Alumnis = new EntitySet<Alumni>(new Action<Alumni>(this.attach_Alumnis), new Action<Alumni>(this.detach_Alumnis));
			this._State = default(EntityRef<State>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string DistrictName
		{
			get
			{
				return this._DistrictName;
			}
			set
			{
				if ((this._DistrictName != value))
				{
					this.OnDistrictNameChanging(value);
					this.SendPropertyChanging();
					this._DistrictName = value;
					this.SendPropertyChanged("DistrictName");
					this.OnDistrictNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int NOT NULL")]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					if (this._State.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStateIDChanging(value);
					this.SendPropertyChanging();
					this._StateID = value;
					this.SendPropertyChanged("StateID");
					this.OnStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="District_Alumni", Storage="_Alumnis", ThisKey="DistrictID", OtherKey="DistrictID")]
		public EntitySet<Alumni> Alumnis
		{
			get
			{
				return this._Alumnis;
			}
			set
			{
				this._Alumnis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_District", Storage="_State", ThisKey="StateID", OtherKey="StateID", IsForeignKey=true)]
		public State State
		{
			get
			{
				return this._State.Entity;
			}
			set
			{
				State previousValue = this._State.Entity;
				if (((previousValue != value) 
							|| (this._State.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._State.Entity = null;
						previousValue.Districts.Remove(this);
					}
					this._State.Entity = value;
					if ((value != null))
					{
						value.Districts.Add(this);
						this._StateID = value.StateID;
					}
					else
					{
						this._StateID = default(int);
					}
					this.SendPropertyChanged("State");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Alumnis(Alumni entity)
		{
			this.SendPropertyChanging();
			entity.District = this;
		}
		
		private void detach_Alumnis(Alumni entity)
		{
			this.SendPropertyChanging();
			entity.District = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.States")]
	public partial class State : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StateID;
		
		private string _StateName;
		
		private EntitySet<District> _Districts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStateIDChanging(int value);
    partial void OnStateIDChanged();
    partial void OnStateNameChanging(string value);
    partial void OnStateNameChanged();
    #endregion
		
		public State()
		{
			this._Districts = new EntitySet<District>(new Action<District>(this.attach_Districts), new Action<District>(this.detach_Districts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this.OnStateIDChanging(value);
					this.SendPropertyChanging();
					this._StateID = value;
					this.SendPropertyChanged("StateID");
					this.OnStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string StateName
		{
			get
			{
				return this._StateName;
			}
			set
			{
				if ((this._StateName != value))
				{
					this.OnStateNameChanging(value);
					this.SendPropertyChanging();
					this._StateName = value;
					this.SendPropertyChanged("StateName");
					this.OnStateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_District", Storage="_Districts", ThisKey="StateID", OtherKey="StateID")]
		public EntitySet<District> Districts
		{
			get
			{
				return this._Districts;
			}
			set
			{
				this._Districts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Districts(District entity)
		{
			this.SendPropertyChanging();
			entity.State = this;
		}
		
		private void detach_Districts(District entity)
		{
			this.SendPropertyChanging();
			entity.State = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AlumniImages")]
	public partial class AlumniImage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ImageID;
		
		private int _AlumniID;
		
		private string _ImagePath;
		
		private System.DateTime _UploadDate;
		
		private string _FileName;
		
		private EntityRef<Alumni> _Alumni;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImageIDChanging(int value);
    partial void OnImageIDChanged();
    partial void OnAlumniIDChanging(int value);
    partial void OnAlumniIDChanged();
    partial void OnImagePathChanging(string value);
    partial void OnImagePathChanged();
    partial void OnUploadDateChanging(System.DateTime value);
    partial void OnUploadDateChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    #endregion
		
		public AlumniImage()
		{
			this._Alumni = default(EntityRef<Alumni>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ImageID
		{
			get
			{
				return this._ImageID;
			}
			set
			{
				if ((this._ImageID != value))
				{
					this.OnImageIDChanging(value);
					this.SendPropertyChanging();
					this._ImageID = value;
					this.SendPropertyChanged("ImageID");
					this.OnImageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlumniID", DbType="Int NOT NULL")]
		public int AlumniID
		{
			get
			{
				return this._AlumniID;
			}
			set
			{
				if ((this._AlumniID != value))
				{
					if (this._Alumni.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAlumniIDChanging(value);
					this.SendPropertyChanging();
					this._AlumniID = value;
					this.SendPropertyChanged("AlumniID");
					this.OnAlumniIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImagePath", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ImagePath
		{
			get
			{
				return this._ImagePath;
			}
			set
			{
				if ((this._ImagePath != value))
				{
					this.OnImagePathChanging(value);
					this.SendPropertyChanging();
					this._ImagePath = value;
					this.SendPropertyChanged("ImagePath");
					this.OnImagePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadDate", DbType="DateTime NOT NULL")]
		public System.DateTime UploadDate
		{
			get
			{
				return this._UploadDate;
			}
			set
			{
				if ((this._UploadDate != value))
				{
					this.OnUploadDateChanging(value);
					this.SendPropertyChanging();
					this._UploadDate = value;
					this.SendPropertyChanged("UploadDate");
					this.OnUploadDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alumni_AlumniImage", Storage="_Alumni", ThisKey="AlumniID", OtherKey="AlumniID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Alumni Alumni
		{
			get
			{
				return this._Alumni.Entity;
			}
			set
			{
				Alumni previousValue = this._Alumni.Entity;
				if (((previousValue != value) 
							|| (this._Alumni.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Alumni.Entity = null;
						previousValue.AlumniImages.Remove(this);
					}
					this._Alumni.Entity = value;
					if ((value != null))
					{
						value.AlumniImages.Add(this);
						this._AlumniID = value.AlumniID;
					}
					else
					{
						this._AlumniID = default(int);
					}
					this.SendPropertyChanged("Alumni");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
